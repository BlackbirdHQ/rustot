name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  ALL_FEATURES: "ota_mqtt_data,ota_http_data"

jobs:
  cancel_previous_runs:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - uses: dsherret/rust-toolchain-file@v1
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --target thumbv7em-none-eabihf --features ${{ env.ALL_FEATURES }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib --features "ota_mqtt_data,log"
  
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - uses: dsherret/rust-toolchain-file@v1
      - name: Rustfmt
        run: cargo fmt -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - uses: dsherret/rust-toolchain-file@v1
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- ${{ env.CLIPPY_PARAMS }}

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: ['test', 'rustfmt', 'clippy']
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - uses: dsherret/rust-toolchain-file@v1
      - name: Create OTA Job
        run: |
          ./scripts/create_ota.sh
        env:
          AWS_DEFAULT_REGION: ${{ secrets.MGMT_AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MGMT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MGMT_AWS_SECRET_ACCESS_KEY }}
      - name: Integration Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --test '*' --features "ota_mqtt_data,log" --target x86_64-unknown-linux-gnu
        env:
          IDENTITY_PASSWORD: ${{ secrets.DEVICE_ADVISOR_PASSWORD }}
          AWS_HOSTNAME: a1vq3mi5y3c6j5-ats.iot.eu-west-1.amazonaws.com

      - name: Cleanup OTA Jobs
        if: ${{ always() }}
        run: |
          ./scripts/cleanup_ota.sh
        env:
          AWS_DEFAULT_REGION: ${{ secrets.MGMT_AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MGMT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MGMT_AWS_SECRET_ACCESS_KEY }}